{"version":3,"sources":["components/File.js","components/Folder.js","App.js","serviceWorker.js","index.js"],"names":["File","props","list","files","map","file","key","id","className","isOpen","Folder","state","obj","programFiles","users","windows","pictures","documents","studyMaterials","personals","projects","office","this","onClick","toggle","val","objState","Component","App","e","stopPropagation","target","setState","prev","C","D","E","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30f488d1.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from 'react';\r\n\r\nconst File = (props) => {\r\n\t// console.log(props);\r\n\r\n\tlet list = props.files.map((file) => (\r\n\t\t<li key={file} id={file} className=\"list\">\r\n\t\t\t{file}\r\n\t\t</li>\r\n\t));\r\n\r\n\t// return <ul>{list}</ul>;\r\n\treturn <ul>{props.isOpen && list}</ul>;\r\n};\r\n\r\nexport default File;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport File from './File';\r\n\r\nclass Folder extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tobj: {\r\n\t\t\t\tprogramFiles: ['Windows NT', 'Windows Mail', 'Windows Photo Viewer'],\r\n\t\t\t\tusers: ['Nishant', 'Siddharth'],\r\n\t\t\t\twindows: ['Boot', 'File Manager'],\r\n\t\t\t\tpictures: ['Cat.png'],\r\n\t\t\t\tdocuments: ['ProgressReport.docx', 'DesignDoc.pdf'],\r\n\t\t\t\tstudyMaterials: ['HTML.html', 'Css.pdf', 'JS.pdf'],\r\n\t\t\t\tpersonals: ['MyPhoto.png', 'Resume.pdf'],\r\n\t\t\t\tprojects: ['Calculator Application', 'Notes Application'],\r\n\t\t\t\toffice: ['Reports.docx'],\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(this.state, this.props);\r\n\t\tconst { files } = this.props;\r\n\t\tconst list = files.map((file) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"list\"\r\n\t\t\t\t\tonClick={this.props.toggle}\r\n\t\t\t\t\tkey={file.val}\r\n\t\t\t\t\tid={file.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.objState[file.id] ? 'v  ' : '>  '}\r\n\t\t\t\t\t{file.val}\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tisOpen={this.props.objState[file.id]}\r\n\t\t\t\t\t\tfiles={this.state.obj[file.id]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn <ul>{list}</ul>;\r\n\t}\r\n}\r\n\r\nexport default Folder;\r\n","/** @format */\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Folder from './components/Folder';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tobjState: {\n\t\t\t\tC: false,\n\t\t\t\tD: false,\n\t\t\t\tE: false,\n\t\t\t\tprogramFiles: false,\n\t\t\t\tusers: false,\n\t\t\t\twindows: false,\n\t\t\t\tpictures: false,\n\t\t\t\tdocuments: false,\n\t\t\t\tstudyMaterials: false,\n\t\t\t\tpersonals: false,\n\t\t\t\tprojects: false,\n\t\t\t\toffice: false,\n\t\t\t},\n\t\t\tobj: {\n\t\t\t\tC: [\n\t\t\t\t\t{ id: 'programFiles', val: 'Program Files' },\n\t\t\t\t\t{ id: 'users', val: 'Users' },\n\t\t\t\t\t{ id: 'windows', val: 'Windows' },\n\t\t\t\t],\n\t\t\t\tD: [\n\t\t\t\t\t{ id: 'personals', val: 'Personals' },\n\t\t\t\t\t{ id: 'projects', val: 'Projects' },\n\t\t\t\t\t{ id: 'office', val: 'Office' },\n\t\t\t\t],\n\t\t\t\tE: [\n\t\t\t\t\t{ id: 'pictures', val: 'Pictures' },\n\t\t\t\t\t{ id: 'documents', val: 'Documents' },\n\t\t\t\t\t{ id: 'studyMaterials', val: 'Study Materials' },\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t}\n\n\ttoggle = (e) => {\n\t\te.stopPropagation();\n\t\tconst { id } = e.target;\n\t\t// console.log(id);\n\t\tthis.setState((prev) => {\n\t\t\tconst { objState } = prev;\n\t\t\treturn {\n\t\t\t\tobjState: { ...objState, [id]: !objState[id] },\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\t// console.log(this.state);\n\t\t// console.log(this.state.objState[this.state.currId]);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Nested Data Representation</h1>\n\t\t\t\t<ul className=\"container\">\n\t\t\t\t\t<div id=\"C\" className=\"list\" onClick={this.toggle}>\n\t\t\t\t\t\t{this.state.objState.C ? 'v Local Disk (C:)' : '> Local Disk (C:)'}\n\t\t\t\t\t\t{this.state.objState.C && (\n\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\ttoggle={this.toggle}\n\t\t\t\t\t\t\t\tfiles={this.state.obj.C}\n\t\t\t\t\t\t\t\tobj={this.state.obj}\n\t\t\t\t\t\t\t\tobjState={this.state.objState}\n\t\t\t\t\t\t\t></Folder>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"D\" className=\"list\" onClick={this.toggle}>\n\t\t\t\t\t\t{this.state.objState.D ? 'v Local Disk (D:)' : '> Local Disk (D:)'}\n\t\t\t\t\t\t{this.state.objState.D && (\n\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\ttoggle={this.toggle}\n\t\t\t\t\t\t\t\tfiles={this.state.obj.D}\n\t\t\t\t\t\t\t\tobj={this.state.obj}\n\t\t\t\t\t\t\t\tobjState={this.state.objState}\n\t\t\t\t\t\t\t></Folder>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"E\" className=\"list\" onClick={this.toggle}>\n\t\t\t\t\t\t{this.state.objState.E ? 'v Local Disk (E:)' : '> Local Disk (E:)'}\n\t\t\t\t\t\t{this.state.objState.E && (\n\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\ttoggle={this.toggle}\n\t\t\t\t\t\t\t\tfiles={this.state.obj.E}\n\t\t\t\t\t\t\t\tobj={this.state.obj}\n\t\t\t\t\t\t\t\tobjState={this.state.objState}\n\t\t\t\t\t\t\t></Folder>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}